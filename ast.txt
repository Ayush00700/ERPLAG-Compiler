
PRINTING AST RULES With InorderTraversal

1	PROGRAM
No of children: 4 
Childrens:DRIVER ,
Next pointers:NULL

Iterating over next child of Node 1: which is PROGRAM
//This node was made NULL and thereby does not exist!:
Iterating over next child of Node 1: which is PROGRAM
//This node was made NULL and thereby does not exist!:
Iterating over next child of Node 1: which is PROGRAM

2	DRIVER
No of children: 1 
Childrens:STATEMENTS ,
Next pointers:NULL

Iterating over next child of Node 2: which is DRIVER

3	STATEMENTS
No of children: 0 
Childrens:
Next pointers:DECLARE ,DECLARE ,DECLARE ,DECLARE ,ASSIGN ,ASSIGN ,ASSIGN ,INPUT_ID ,INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next list element of node 3: which is STATEMENTS

4	DECLARE
No of children: 2 
Childrens:ID_LIST_HEAD ,INTEGER ,
Next pointers:DECLARE ,DECLARE ,DECLARE ,ASSIGN ,ASSIGN ,ASSIGN ,INPUT_ID ,INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 4: which is DECLARE

	x

5	ID_LIST_HEAD
No of children: 0 
Childrens:
Next pointers:ID ,ID ,ID ,

Iterating over next list element of node 5: which is ID_LIST_HEAD

	y

6	ID
No of children: 0 
Childrens:
Next pointers:ID ,ID ,

Iterating over next list element of node 5: which is ID_LIST_HEAD

	z

7	ID
No of children: 0 
Childrens:
Next pointers:ID ,

Iterating over next list element of node 5: which is ID_LIST_HEAD

	k

8	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 4: which is DECLARE

	integer

9	INTEGER
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

10	DECLARE
No of children: 2 
Childrens:ID_LIST_HEAD ,INTEGER ,
Next pointers:DECLARE ,DECLARE ,ASSIGN ,ASSIGN ,ASSIGN ,INPUT_ID ,INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 10: which is DECLARE

	a

11	ID_LIST_HEAD
No of children: 0 
Childrens:
Next pointers:ID ,ID ,

Iterating over next list element of node 11: which is ID_LIST_HEAD

	b

12	ID
No of children: 0 
Childrens:
Next pointers:ID ,

Iterating over next list element of node 11: which is ID_LIST_HEAD

	c

13	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 10: which is DECLARE

	integer

14	INTEGER
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

15	DECLARE
No of children: 2 
Childrens:ID_LIST_HEAD ,BOOLEAN ,
Next pointers:DECLARE ,ASSIGN ,ASSIGN ,ASSIGN ,INPUT_ID ,INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 15: which is DECLARE

	u

16	ID_LIST_HEAD
No of children: 0 
Childrens:
Next pointers:ID ,

Iterating over next list element of node 16: which is ID_LIST_HEAD

	v

17	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 15: which is DECLARE

	boolean

18	BOOLEAN
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

19	DECLARE
No of children: 2 
Childrens:ID_LIST_HEAD ,ARRAY_DATATYPE ,
Next pointers:ASSIGN ,ASSIGN ,ASSIGN ,INPUT_ID ,INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 19: which is DECLARE

	A

20	ID_LIST_HEAD
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 19: which is DECLARE

21	ARRAY_DATATYPE
No of children: 2 
Childrens:ARRAY_RANGE ,INTEGER ,
Next pointers:NULL

Iterating over next child of Node 21: which is ARRAY_DATATYPE

22	ARRAY_RANGE
No of children: 2 
Childrens:SIGNED_NUMBER ,SIGNED_NUMBER ,
Next pointers:NULL

Iterating over next child of Node 22: which is ARRAY_RANGE

23	SIGNED_NUMBER
No of children: 2 
Childrens:NUM ,
Next pointers:NULL

Iterating over next child of Node 23: which is SIGNED_NUMBER
//This node was made NULL and thereby does not exist!:
Iterating over next child of Node 23: which is SIGNED_NUMBER

	10

	10

24	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 22: which is ARRAY_RANGE

25	SIGNED_NUMBER
No of children: 2 
Childrens:NUM ,
Next pointers:NULL

Iterating over next child of Node 25: which is SIGNED_NUMBER
//This node was made NULL and thereby does not exist!:
Iterating over next child of Node 25: which is SIGNED_NUMBER

	15

	15

26	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 21: which is ARRAY_DATATYPE

	integer

27	INTEGER
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

28	ASSIGN
No of children: 2 
Childrens:ID ,TRUE ,
Next pointers:ASSIGN ,ASSIGN ,INPUT_ID ,INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 28: which is ASSIGN

	u

29	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 28: which is ASSIGN

	true

30	TRUE
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

31	ASSIGN
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:ASSIGN ,INPUT_ID ,INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 31: which is ASSIGN

	a

32	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 31: which is ASSIGN

	5

	5

33	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

34	ASSIGN
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:INPUT_ID ,INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 34: which is ASSIGN

	b

35	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 34: which is ASSIGN

	9

	9

36	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

	x

37	INPUT_ID
No of children: 0 
Childrens:
Next pointers:INPUT_ID ,ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next list element of node 3: which is STATEMENTS

	y

38	INPUT_ID
No of children: 0 
Childrens:
Next pointers:ASSIGN ,OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next list element of node 3: which is STATEMENTS

39	ASSIGN
No of children: 2 
Childrens:ID ,MINUS ,
Next pointers:OUTPUT ,FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 39: which is ASSIGN

	z

40	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 39: which is ASSIGN

41	MINUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 41: which is MINUS

42	PLUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 42: which is PLUS

43	PLUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 43: which is PLUS

44	PLUS
No of children: 2 
Childrens:ID ,MUL ,
Next pointers:NULL

Iterating over next child of Node 44: which is PLUS

	x

45	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 44: which is PLUS

46	MUL
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 46: which is MUL

	y

47	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 46: which is MUL

	b

48	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 43: which is PLUS

49	MUL
No of children: 2 
Childrens:MINUS ,ID ,
Next pointers:NULL

Iterating over next child of Node 49: which is MUL

50	MINUS
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 50: which is MINUS

	a

51	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 50: which is MINUS

	b

52	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 49: which is MUL

	y

53	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 42: which is PLUS

54	MUL
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:NULL

Iterating over next child of Node 54: which is MUL

	a

55	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 54: which is MUL

	2

	2

56	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 41: which is MINUS

57	MUL
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 57: which is MUL

	b

58	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 57: which is MUL

	x

59	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

60	OUTPUT
No of children: 1 
Childrens:ID ,
Next pointers:FORLOOP ,ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 60: which is OUTPUT

	z

61	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

62	FORLOOP
No of children: 3 
Childrens:ID ,FORRANGE ,STATEMENTS ,
Next pointers:ASSIGN ,ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 62: which is FORLOOP

	k

63	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 62: which is FORLOOP

64	FORRANGE
No of children: 2 
Childrens:FORINDEX ,FORINDEX ,
Next pointers:NULL

Iterating over next child of Node 64: which is FORRANGE

65	FORINDEX
No of children: 2 
Childrens:NUM ,
Next pointers:NULL

Iterating over next child of Node 65: which is FORINDEX
//This node was made NULL and thereby does not exist!:
Iterating over next child of Node 65: which is FORINDEX

	10

	10

66	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 64: which is FORRANGE

67	FORINDEX
No of children: 2 
Childrens:NUM ,
Next pointers:NULL

Iterating over next child of Node 67: which is FORINDEX
//This node was made NULL and thereby does not exist!:
Iterating over next child of Node 67: which is FORINDEX

	15

	15

68	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 62: which is FORLOOP

69	STATEMENTS
No of children: 0 
Childrens:
Next pointers:DECLARE ,ASSIGN ,INPUT_ID ,ASSIGN ,OUTPUT ,ASSIGN ,OUTPUT ,

Iterating over next list element of node 69: which is STATEMENTS

70	DECLARE
No of children: 2 
Childrens:ID_LIST_HEAD ,INTEGER ,
Next pointers:ASSIGN ,INPUT_ID ,ASSIGN ,OUTPUT ,ASSIGN ,OUTPUT ,

Iterating over next child of Node 70: which is DECLARE

	a

71	ID_LIST_HEAD
No of children: 0 
Childrens:
Next pointers:ID ,

Iterating over next list element of node 71: which is ID_LIST_HEAD

	b

72	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 70: which is DECLARE

	integer

73	INTEGER
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 69: which is STATEMENTS

74	ASSIGN
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:INPUT_ID ,ASSIGN ,OUTPUT ,ASSIGN ,OUTPUT ,

Iterating over next child of Node 74: which is ASSIGN

	a

75	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 74: which is ASSIGN

	7

	7

76	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 69: which is STATEMENTS

	b

77	INPUT_ID
No of children: 0 
Childrens:
Next pointers:ASSIGN ,OUTPUT ,ASSIGN ,OUTPUT ,

Iterating over next list element of node 69: which is STATEMENTS

78	ASSIGN
No of children: 2 
Childrens:ID ,PLUS ,
Next pointers:OUTPUT ,ASSIGN ,OUTPUT ,

Iterating over next child of Node 78: which is ASSIGN

	a

79	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 78: which is ASSIGN

80	PLUS
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 80: which is PLUS

	a

81	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 80: which is PLUS

	b

82	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 69: which is STATEMENTS

83	OUTPUT
No of children: 1 
Childrens:ID ,
Next pointers:ASSIGN ,OUTPUT ,

Iterating over next child of Node 83: which is OUTPUT

	a

84	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 69: which is STATEMENTS

85	ASSIGN
No of children: 2 
Childrens:ID ,PLUS ,
Next pointers:OUTPUT ,

Iterating over next child of Node 85: which is ASSIGN

	z

86	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 85: which is ASSIGN

87	PLUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 87: which is PLUS

88	PLUS
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 88: which is PLUS

	z

89	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 88: which is PLUS

	k

90	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 87: which is PLUS

91	MUL
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:NULL

Iterating over next child of Node 91: which is MUL

	a

92	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 91: which is MUL

	2

	2

93	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 69: which is STATEMENTS

94	OUTPUT
No of children: 1 
Childrens:ID ,
Next pointers:NULL

Iterating over next child of Node 94: which is OUTPUT

	z

95	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

96	ASSIGN
No of children: 2 
Childrens:ID ,MINUS ,
Next pointers:ASSIGN ,OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 96: which is ASSIGN

	z

97	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 96: which is ASSIGN

98	MINUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 98: which is MINUS

99	PLUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 99: which is PLUS

100	PLUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 100: which is PLUS

101	PLUS
No of children: 2 
Childrens:ID ,MUL ,
Next pointers:NULL

Iterating over next child of Node 101: which is PLUS

	x

102	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 101: which is PLUS

103	MUL
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 103: which is MUL

	y

104	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 103: which is MUL

	b

105	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 100: which is PLUS

106	MUL
No of children: 2 
Childrens:MINUS ,ID ,
Next pointers:NULL

Iterating over next child of Node 106: which is MUL

107	MINUS
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 107: which is MINUS

	a

108	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 107: which is MINUS

	b

109	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 106: which is MUL

	y

110	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 99: which is PLUS

111	MUL
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:NULL

Iterating over next child of Node 111: which is MUL

	a

112	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 111: which is MUL

	2

	2

113	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 98: which is MINUS

114	MUL
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 114: which is MUL

	b

115	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 114: which is MUL

	x

116	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

117	ASSIGN
No of children: 2 
Childrens:ID ,AND ,
Next pointers:OUTPUT ,OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 117: which is ASSIGN

	v

118	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 117: which is ASSIGN

119	AND
No of children: 2 
Childrens:AND ,ID ,
Next pointers:NULL

Iterating over next child of Node 119: which is AND

120	AND
No of children: 2 
Childrens:OR ,LT_result ,
Next pointers:NULL

Iterating over next child of Node 120: which is AND

121	OR
No of children: 2 
Childrens:GT_result ,LE_result ,
Next pointers:NULL

Iterating over next child of Node 121: which is OR

122	GT_result
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:NULL

Iterating over next child of Node 122: which is GT_result

	z

123	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 122: which is GT_result

	10

	10

124	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 121: which is OR

125	LE_result
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 125: which is LE_result

	a

126	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 125: which is LE_result

	b

127	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 120: which is AND

128	LT_result
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 128: which is LT_result

	x

129	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 128: which is LT_result

	y

130	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 119: which is AND

	u

131	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

132	OUTPUT
No of children: 1 
Childrens:ID ,
Next pointers:OUTPUT ,INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 132: which is OUTPUT

	z

133	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

134	OUTPUT
No of children: 1 
Childrens:ID ,
Next pointers:INPUT_ID ,ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next child of Node 134: which is OUTPUT

	u

135	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

	A

136	INPUT_ID
No of children: 0 
Childrens:
Next pointers:ASSIGN ,OUTPUT ,OUTPUT ,

Iterating over next list element of node 3: which is STATEMENTS

137	ASSIGN
No of children: 2 
Childrens:ID ,PLUS ,
Next pointers:OUTPUT ,OUTPUT ,

Iterating over next child of Node 137: which is ASSIGN

	y

138	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 137: which is ASSIGN

139	PLUS
No of children: 2 
Childrens:PLUS ,ARRAY_ACCESS ,
Next pointers:NULL

Iterating over next child of Node 139: which is PLUS

140	PLUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 140: which is PLUS

141	PLUS
No of children: 2 
Childrens:PLUS ,MUL ,
Next pointers:NULL

Iterating over next child of Node 141: which is PLUS

142	PLUS
No of children: 2 
Childrens:ID ,ID ,
Next pointers:NULL

Iterating over next child of Node 142: which is PLUS

	a

143	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 142: which is PLUS

	x

144	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 141: which is PLUS

145	MUL
No of children: 2 
Childrens:ARRAY_ACCESS ,NUM ,
Next pointers:NULL

Iterating over next child of Node 145: which is MUL

146	ARRAY_ACCESS
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:NULL

Iterating over next child of Node 146: which is ARRAY_ACCESS

	A

147	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 146: which is ARRAY_ACCESS

	13

	13

148	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 145: which is MUL

	2

	2

149	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 140: which is PLUS

150	MUL
No of children: 2 
Childrens:ARRAY_ACCESS ,NUM ,
Next pointers:NULL

Iterating over next child of Node 150: which is MUL

151	ARRAY_ACCESS
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:NULL

Iterating over next child of Node 151: which is ARRAY_ACCESS

	A

152	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 151: which is ARRAY_ACCESS

	14

	14

153	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 150: which is MUL

	3

	3

154	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 139: which is PLUS

155	ARRAY_ACCESS
No of children: 2 
Childrens:ID ,NUM ,
Next pointers:NULL

Iterating over next child of Node 155: which is ARRAY_ACCESS

	A

156	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 155: which is ARRAY_ACCESS

	15

	15

157	NUM
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

158	OUTPUT
No of children: 1 
Childrens:ID ,
Next pointers:OUTPUT ,

Iterating over next child of Node 158: which is OUTPUT

	y

159	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next list element of node 3: which is STATEMENTS

160	OUTPUT
No of children: 1 
Childrens:ID ,
Next pointers:NULL

Iterating over next child of Node 160: which is OUTPUT

	A

161	ID
No of children: 0 
Childrens:
Next pointers:NULL

Iterating over next child of Node 1: which is PROGRAM
//This node was made NULL and thereby does not exist!: