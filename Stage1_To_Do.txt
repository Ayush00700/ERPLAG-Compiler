Driver  
        Removal   of  Comments
        Print Lexemmes
            The format for printing each token is as follows.
            Line_number          lexeme           Token_name 
            Also print the lexical errors with lexemes and line numbers appropriately.
        Syntatic
            Print Parse tree
            Print errors    
                Syntax
                Lexical    
        Time.h module
            Complete compilation
                Lexer
                Parser
        Status={"Parser complete and working (with parse tree, and error detection. No segemnetation faul). Error recovery pending"}
        in_order_traversal     
            Leftmost child ‐‐> parent node‐‐> remaining siblings 

Documentation (how extensive)
Testing (With self created test cases)
Testing Error reporting
Error Recovery


In lexer.c:
    1) getStream(File *fp):- takes input code 
                             Bring to memory
                             Mantain file pointer to mantain demand

                             Abstract file opening with this functoin
    2) getNextToken():- Generates lexemme and passes it

    3) removeComments(char* testCasefile, char* cleanFile)

In parser.c:
    1) ComputeFirstAndFollow(grammar G, FirstAndFollow F)

    2)createParseTable(firstAndFollow F, Table T)

    3)parseInputSource(testCase, table T)

    4)printParseTree():- lexeme CurrentNode lineno tokenName valueIfNumber  parentNodeSymbol isLeafNode(yes/no) NodeSymbol

    The lexeme of the current node is printed when it is the leaf node else a dummy string of characters "‐‐‐‐" is printed. The line number is one of the information collected by the lexical analyzer during single pass of the source code. The token name corresponding to the current node is printed third. If the lexeme is an integer or real number, then its value computed by the lexical analyzer should be printed at the fourth place. Print the grammar symbol (non-terminal symbol) of the parent node of the currently visited node appropriately at fifth place (for the root node print ROOT for parent symbol) . The sixth column is for printing yes or no appropriately. Print the non-terminal symbol of the node being currently visited at the 7th place, if the node is not the leaf node [Print the actual non-terminal symbol and not the enumerated values for the non-terminal]. Ensure appropriate justification so that the columns appear neat and straight. 


For lexer ensuring the 20 length identifier
Handling the errors





    