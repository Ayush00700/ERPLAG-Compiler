<prog> - <modDecs> <othermods> <driver> <othermods>
<modDecs> - <modDec> <modDecs>
<modDecs> - eps
<modDec> - DECLARE MODULE ID SEMICOL
<othermods> - <mod> <othermods>
<othermods> - eps
<driver> - DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <modDef>
<mod> - DEF MODULE ID ENDDEF TAKES INPUT SQBO <ip_list> SQBC SEMICOL <ret> <modDef>
<ret> - RETURNS SQBO <op_list> SQBC SEMICOL
<ret> - eps
<ip_list> - ID COLON <dataType> <N1>
<N1> - COMMA ID COLON <dataType> <N1>
<N1> - eps
<op_list> - ID COLON <type> <N2>
<N2> - COMMA ID COLON <type> <N2>
<N2> - eps
<dataType> - INTEGER
<dataType> - REAL
<dataType> - BOOLEAN
<dataType> - ARRAY SQBO <range_arrays> SQBC OF <type>
<range_arrays> - <index_arr> RANGEOP <index_arr>
<type> - INTEGER
<type> - REAL
<type> - BOOLEAN
<modDef> - START <stmts> END
<stmts> - <stmt> <stmts>
<stmts> - eps
<stmt> - <iostmt>
<stmt> - <simplestmt>
<stmt> - <declarestmt>
<stmt> - <condstmt>
<stmt> - <iterstmt>
<iostmt> - GET_VALUE BO ID BC SEMICOL
<iostmt> - PRINT BO <var_print> BC SEMICOL
<boolconst> - TRUE
<boolconst> - FALSE
<id_num_rnum> - ID
<id_num_rnum> - NUM
<id_num_rnum> - RNUM
<arr_ele_print> - ID SQBO <new_index> SQBC
<var_print> - ID <P1>
<var_print> - NUM
<var_print> - RNUM
<var_print> - <boolconst>
<P1> - SQBO <new_index> SQBC
<P1> - eps
<simplestmt> - <assignstmt>
<simplestmt> - <modReusestmt>
<assignstmt> - ID <whichstmt>
<whichstmt> - <lvalueIDstmt>
<whichstmt> - <lvalueARRstmt>
<lvalueIDstmt> - ASSIGNOP <exp> SEMICOL
<lvalueARRstmt> - SQBO <element_index_with_expressions> SQBC ASSIGNOP <exp> SEMICOL
<index_arr> - <sign> <new_index>
<new_index> - NUM
<new_index> - ID
<sign> - PLUS
<sign> - MINUS
<sign> - eps
<modReusestmt> - <optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional> - SQBO <idList> SQBC ASSIGNOP
<optional> - eps
<idList> - ID <N3>
<N3> - COMMA ID <N3>
<N3> - eps
<exp> - <arithOrboolExp>
<exp> - <U>
<U> - <unary_op> <new_NT>
<unary_op> - PLUS
<unary_op> - MINUS
<new_NT> - BO <arithExp> BC
<new_NT> - <id_num_rnum>
<arithOrboolExp> - <AnyTerm> <N4>
<N4> - <logOp> <AnyTerm> <N4>
<N4> - eps
<AnyTerm> - <arithExp> <N5>
<AnyTerm> - <boolconst>
<N5> - <relOp> <arithExp>
<N5> - eps
<arithExp> - <term> <N6>
<N6> - <op1> <term> <N6>
<N6> - eps
<term> - <factor> <N7>
<N7> - <op2> <factor> <N7>
<N7> - eps
<factor> - BO <arithOrboolExp> BC
<factor> - NUM
<factor> - RNUM
<factor> - <boolconst>
<factor> - ID <N_11>
<N_11> - SQBO <element_index_with_expressions> SQBC
<N_11> - eps
<arr_element> - ID SQBO <element_index_with_expressions> SQBC
<element_index_with_expressions> - <sign> <N_10>
<element_index_with_expressions> - <arrExpr>
<N_10> - <new_index>
<N_10> - BO <arrExpr> BC
<arrExpr> - <arrTerm> <arr_N4>
<arr_N4> - <op1> <arrTerm> <arr_N4>
<arr_N4> - eps
<arrTerm> - <arrFactor> <arr_N5>
<arr_N5> - <op2> <arrFactor> <arr_N5>
<arr_N5> - eps
<arrFactor> - ID
<arrFactor> - NUM
<arrFactor> - <boolconst>
<arrFactor> - BO <arrExpr> BC
<op1> - PLUS
<op1> - MINUS
<op2> - MUL
<op2> - DIV
<logOp> - AND
<logOp> - OR
<relOp> - LT
<relOp> - LE
<relOp> - GT
<relOp> - GE
<relOp> - EQ
<relOp> - NE
<declarestmt> - DECLARE <idList> COLON <dataType> SEMICOL
<condstmt> - SWITCH BO ID BC START <caseStmts> <default> END
<caseStmts> - CASE <value> COLON <stmts> BREAK SEMICOL <N9>
<N9> - CASE <value> COLON <stmts> BREAK SEMICOL <N9>
<N9> - eps
<value> - NUM
<value> - TRUE
<value> - FALSE
<default>  - DEFAULT COLON <stmts> BREAK SEMICOL
<default> - eps
<iterstmt> - FOR BO ID IN <range_forloop> BC START <stmts> END
<iterstmt> - WHILE BO <arithOrboolExp> BC START <stmts> END
<range_forloop> - <index_forloop> RANGEOP <index_forloop>
<index_forloop> - <sign_forloop> <new_index_forloop>
<new_index_forloop> - NUM
<sign_forloop> - PLUS
<sign_forloop> - MINUS
<sign_forloop> - eps